<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<artifactId>wimi-playground-server-se-cdi</artifactId>

	<name>WIMI playground Server (Java SE CDI Bundle)</name>
	<description>Java SE standalone CDI bundle of WIMI playground Server</description>

	<parent>
		<groupId>org.wimi.playground.server</groupId>
		<artifactId>wimi-playground-server</artifactId>
		<version>${revision}</version>
	</parent>

	<properties>
        <mainClass>org.wimi.playground.server.se.cdi.Main</mainClass>
        <jersey.version>2.34</jersey.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>com.beust</groupId>
			<artifactId>jcommander</artifactId>
			<version>1.78</version>
		</dependency>

		<dependency>
			<groupId>org.wimi.playground.server</groupId>
			<artifactId>wimi-playground-server-core</artifactId>
			<version>${revision}</version>
		</dependency>

		<dependency>
			<groupId>jakarta.ws.rs</groupId>
			<artifactId>jakarta.ws.rs-api</artifactId>
			<version>${jaxrs.version}</version>
		</dependency>

		<dependency>
			<groupId>org.glassfish.jersey.core</groupId>
			<artifactId>jersey-server</artifactId>
			<version>${jersey.version}</version>
		</dependency>

		<dependency>
			<groupId>org.glassfish.jersey.core</groupId>
			<artifactId>jersey-common</artifactId>
			<version>${jersey.version}</version>
		</dependency>

		<dependency>
			<groupId>org.glassfish.grizzly</groupId>
			<artifactId>grizzly-http-server</artifactId>
			<version>2.4.4</version>
		</dependency>

		<dependency>
			<groupId>org.glassfish.jersey.containers</groupId>
			<artifactId>jersey-container-grizzly2-http</artifactId>
			<version>${jersey.version}</version>
		</dependency>

		<dependency>
			<groupId>org.jboss.weld.se</groupId>
			<artifactId>weld-se-core</artifactId>
			<version>3.1.4.Final</version>
			<!--
			<scope>runtime</scope>
			 -->
		</dependency>

		<dependency>
		    <groupId>org.glassfish.jersey.ext.cdi</groupId>
		    <artifactId>jersey-weld2-se</artifactId>
		    <version>${jersey.version}</version>
		</dependency>

		<dependency>
			<groupId>org.glassfish.jersey.inject</groupId>
			<artifactId>jersey-hk2</artifactId>
			<version>${jersey.version}</version>
		</dependency>

		<dependency>
			<groupId>io.smallrye.config</groupId>
			<artifactId>smallrye-config</artifactId>
			<version>1.8.5</version>
			<scope>runtime</scope>
		</dependency>


		<dependency>
			<groupId>io.smallrye.config</groupId>
			<artifactId>smallrye-config-source-file-system</artifactId>
			<version>1.8.5</version>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>jakarta.xml.bind</groupId>
			<artifactId>jakarta.xml.bind-api</artifactId>
			<version>2.3.3</version>
		</dependency>

		<dependency>
			<groupId>org.glassfish.jaxb</groupId>
			<artifactId>jaxb-runtime</artifactId>
			<version>2.3.3</version>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.6.0</version>
				<configuration>
					<mainClass>${mainClass}</mainClass>
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.2.0</version>
				<configuration>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<mainClass>${mainClass}</mainClass>
						</manifest>
					</archive>
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-shade-plugin</artifactId>
				<version>3.2.2</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<minimizeJar>true</minimizeJar>
							<filters>
								<filter>
									<artifact>org.glassfish.jersey.core:jersey-common</artifact>
									<excludes>
										<exclude>META-INF/services/javax.ws.rs.ext.RuntimeDelegate</exclude>
									</excludes>
								</filter>

								<!-- Workaround: Cannot find VersionLogger otherwise! -->
								<filter>
									<artifact>*:weld-core-impl</artifact>
									<includes>
										<include>**/*</include>
									</includes>
								</filter>

								<!-- Workaround: Cannot find CommonLogger otherwise! -->
								<filter>
									<artifact>*:weld-environment-common</artifact>
									<includes>
										<include>**/*</include>
									</includes>
								</filter>

								<!-- Workaround: Cannot find WeldSELogger otherwise! -->
								<filter>
									<artifact>*:weld-se-core</artifact>
									<includes>
										<include>**/*</include>
									</includes>
								</filter>

								<!-- Workaround: Maven Shade Plugin does not support CDI's dependency autodetection -->
								<filter>
									<artifact>*:wimi-playground-server-core</artifact>
									<includes>
										<include>**/*</include>
									</includes>
								</filter>

								<!-- Workaround: Maven Shade Plugin does not support JDBC's dependency autodetection -->
								<filter>
									<artifact>sap:sqlanywhere-jdbc-driver</artifact>
									<includes>
										<include>**/*</include>
									</includes>
								</filter>

								<filter>
									<excludeDefaults>false</excludeDefaults>
									<artifact>*:*</artifact>
									<includes>
										<include>org/glassfish/json/JsonProviderImpl</include>
										<include>com/sun/xml/bind/v2/model/nav/ReflectionNavigator</include>
									</includes>
									<excludes>
										<exclude>**/*.md</exclude>
										<exclude>**/*.markdown</exclude>
										<exclude>**/*.header</exclude>
										<exclude>**/pom.xml</exclude>
										<exclude>**/*-style.xml</exclude>
										<exclude>**/pom.properties</exclude>
										<exclude>**/io.netty.versions.properties</exclude>
										<exclude>**/*.args</exclude>
										<exclude>**/*.so</exclude>
									</excludes>
								</filter>
							</filters>
							<transformers>
								<transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<mainClass>${mainClass}</mainClass>
								</transformer>
								<transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
							</transformers>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>

